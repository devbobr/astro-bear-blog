---
import MainLayout from "../layouts/MainLayout.astro";

import { categories } from "../content/config";
import { getConfiguredImageService } from "astro/dist/assets";
---

<MainLayout>
	<section>
		<div class="grid grid-cols-1 lg:grid-cols-2">
			<div
				class="flex items-center justify-center px-4 py-10 sm:px-6 sm:py-16 lg:px-8 lg:py-24"
			>
				<div class="xl:mx-auto xl:w-full xl:max-w-sm 2xl:max-w-md">
					<h2 class="text-3xl font-bold leading-tight text-black sm:text-4xl">
						Create new post
					</h2>
					<p class="mt-2 text-sm text-gray-600">
						This will open your Bear app and create a new note with the
						frontmatter attributes defined here.
					</p>
					<form id="frmNewPost" class="mt-8">
						<div class="space-y-5">
							<div>
								<label for="" class="text-base font-medium text-gray-900">
									Title
								</label>
								<div class="mt-2">
									<input
										class="flex h-10 w-full rounded-md border border-gray-300 bg-transparent px-3 py-2 text-sm placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-gray-400 focus:ring-offset-1 disabled:cursor-not-allowed disabled:opacity-50"
										type="text"
										placeholder="The new post's title"
										name="title"
									/>
								</div>
							</div>
							<div>
								<label for="" class="text-base font-medium text-gray-900">
									Category
								</label>
								<div class="mt-2">
									<select
										class="flex h-10 w-full rounded-md border border-gray-300 bg-transparent px-3 py-2 text-sm placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-gray-400 focus:ring-offset-1 disabled:cursor-not-allowed disabled:opacity-50"
										name="category"
									>
										<option value="">Uncategorized</option>
										{
											categories.map((category) => (
												<option value={category}>{category}</option>
											))
										}
									</select>
								</div>
							</div>
							<div>
								<div class="flex items-center justify-between">
									<label for="" class="text-base font-medium text-gray-900">
										Short description
									</label>
								</div>
								<div class="mt-2">
									<input
										class="flex h-10 w-full rounded-md border border-gray-300 bg-transparent px-3 py-2 text-sm placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-gray-400 focus:ring-offset-1 disabled:cursor-not-allowed disabled:opacity-50"
										type="text"
										placeholder="Describe your post in one sentence"
										name="description"
									/>
								</div>
							</div>
							<div class="flex justify-between items-center">
								<div class="flex items-center justify-between">
									<label for="" class="text-base font-medium text-gray-900">
										Will the post have a hero image?
									</label>
								</div>
								<div class="mt-2">
									<input
										class="flex h-10 w-full rounded-md border border-gray-300 bg-transparent px-3 py-2 text-sm placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-gray-400 focus:ring-offset-1 disabled:cursor-not-allowed disabled:opacity-50"
										type="checkbox"
										name="heroImage"
									/>
								</div>
							</div>
							<div class="flex justify-between items-center">
								<div class="flex items-center justify-between">
									<label for="" class="text-base font-medium text-gray-900">
										Will the post be featured?
									</label>
								</div>
								<div class="mt-2">
									<input
										class="flex h-10 w-full rounded-md border border-gray-300 bg-transparent px-3 py-2 text-sm placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-gray-400 focus:ring-offset-1 disabled:cursor-not-allowed disabled:opacity-50"
										type="checkbox"
										name="featured"
									/>
								</div>
							</div>
							<!-- <div>
								<div class="flex items-center justify-between">
									<label for="" class="text-base font-medium text-gray-900">
										Will be page content form menu item
									</label>
								</div>
								<div class="mt-2">
									<input
										class="flex h-10 w-full rounded-md border border-gray-300 bg-transparent px-3 py-2 text-sm placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-gray-400 focus:ring-offset-1 disabled:cursor-not-allowed disabled:opacity-50"
										type="text"
										placeholder="Menu path"
										name="menuPath"
									/>
								</div>
							</div> -->
							<div>
								<button
									type="submit"
									class="inline-flex w-full items-center justify-center rounded-md bg-black px-3.5 py-2.5 font-semibold leading-7 text-white hover:bg-black/80"
								>
									Create new post
									<svg
										xmlns="http://www.w3.org/2000/svg"
										width="16"
										height="16"
										viewBox="0 0 24 24"
										fill="none"
										stroke="currentColor"
										stroke-width="2"
										stroke-linecap="round"
										stroke-linejoin="round"
										class="ml-2"
									>
										<line x1="5" y1="12" x2="19" y2="12"></line>
										<polyline points="12 5 19 12 12 19"></polyline>
									</svg>
								</button>
							</div>
						</div>
					</form>
				</div>
			</div>
			<div class="h-full w-full">
				<img
					class="mx-auto h-full w-full rounded-md object-cover"
					src="https://images.unsplash.com/photo-1630673245362-f69d2b93880e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1740&q=80"
					alt=""
				/>
			</div>
		</div>
	</section>
</MainLayout>

<script>
	const frmNewPost = document.querySelector(
		"#frmNewPost"
	) as HTMLFormElement | null;
	frmNewPost?.addEventListener("submit", (e) => {
		e.preventDefault();
		const formData = new FormData(frmNewPost);
		const data = Object.fromEntries(formData.entries());
		const frontMatter = Object.keys(data).map((key) => {
			if (key === "title") return null; // title is handled separately

			if (key === "heroImage") return data[key] === "on" ? "heroImage: " : null;

			if (key === "featured")
				return data[key] === "on" ? "featured: true" : null;

			return `${key}: ${data[key]}`;
		});

		const fmText = [
			"---",
			...frontMatter.filter((item) => item !== null),
			`bearId: ${self.crypto.randomUUID()}`,
			"---\n\n",
		].join("\n");

		const url = `bear://x-callback-url/create?title=${
			data.title
		}&text=${encodeURIComponent(fmText)}&tags=blog`;

		window.open(url, "_blank");
	});
</script>
